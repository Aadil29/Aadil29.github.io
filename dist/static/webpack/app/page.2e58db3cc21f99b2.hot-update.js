"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/components/homepage/projects/constants.jsx":
/*!********************************************************!*\
  !*** ./app/components/homepage/projects/constants.jsx ***!
  \********************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   projectImages: () => (/* binding */ projectImages)\n/* harmony export */ });\nconst projectImages = {\n    1: [\n        // Audio Deepfake Detection System\n        {\n            src: \"/ProjectPics/AudioDeepFakeDetection/DeepfakeDetectionDecision.png\",\n            alt: \"Audio Deepfake Detection Interface showing a .wav file uploaded and detected as BONAFIDE\",\n            caption: \"Main detection interface where users can upload a .wav file for deepfake detection. The result for the uploaded file 'LA_E_1001976.wav' is shown as 'BONAFIDE'.\"\n        },\n        {\n            src: \"/ProjectPics/AudioDeepFakeDetection/DeepfakeDetectionStats.png\",\n            alt: \"Deepfake Detection Statistics popup showing total uploads, bonafide, and spoof counts\",\n            caption: \"Deepfake Detection Statistics panel displaying metrics such as total uploads, and the count of bonafide and spoof detections, all currently at zero.\"\n        },\n        {\n            src: \"/ProjectPics/AudioDeepFakeDetection/SignUpFormOtpSentAfterSignUpButton.png\",\n            alt: \"Sign Up form with email, password, voice registration completed, and OTP input\",\n            caption: \"Sign Up form showing fields for email and password, with voice registration completed. An OTP has been sent to the registered email for verification.\"\n        },\n        {\n            src: \"/ProjectPics/AudioDeepFakeDetection/SignInFormPassessAllChecks.png\",\n            alt: \"Voice Authentication during sign in passing passphrase match, similarity, and deepfake checks\",\n            caption: \"Voice Authentication during sign-in, requiring the user to say a specific phrase. The system has successfully matched the passphrase, achieved a high similarity score, and confirmed the audio is not a deepfake.\"\n        },\n        {\n            src: \"/ProjectPics/AudioDeepFakeDetection/SignInVoiceIdBeforeRecording.png\",\n            alt: \"Voice Authentication during sign in before recording\",\n            caption: \"Voice Authentication prompt during sign-in, instructing the user to clearly say a given phrase before starting the recording.\"\n        },\n        {\n            src: \"/ProjectPics/AudioDeepFakeDetection/SignUpFormListenToSample2Recording.png\",\n            alt: \"Voice Registration for sign up, listening to sample 2\",\n            caption: \"Voice Registration during sign-up, presenting the second of three samples to be spoken. Users can re-record or proceed to the next sample.\"\n        },\n        {\n            src: \"/ProjectPics/AudioDeepFakeDetection/SignUpFormVoiceRegSample3BeforeRecord.png\",\n            alt: \"Voice Registration for sign up, sample 3 before recording\",\n            caption: \"Voice Registration during sign-up, showing the third and final sample phrase to be recorded before completing the voice registration process.\"\n        },\n        {\n            src: \"/ProjectPics/AudioDeepFakeDetection/AudioDeepfakeVideo.mp4\",\n            alt: \"Video demonstration of the Audio Deepfake Detection System in action\",\n            caption: \"Video walkthrough showcasing the deepfake detection dashboard, including audio upload, analysis, and real-time classification of bona fide or spoofed audio files.\"\n        }\n    ],\n    2: [\n        // MNIST Neural Network\n        {\n            src: \"/ProjectPics/MNSIT/ClassDefinition.png\",\n            alt: \"Neural Network Class Definition\",\n            caption: \"Visual representation of the Neural Network class definition, outlining the architecture and key methods like initialization, activation functions (ReLU, Softmax), and loss calculation.\"\n        },\n        {\n            src: \"/ProjectPics/MNSIT/FowardPass.png\",\n            alt: \"Neural Network Forward Pass\",\n            caption: \"Illustration of the forward pass operation within the Neural Network, showing how input data propagates through layers to produce output predictions.\"\n        },\n        {\n            src: \"/ProjectPics/MNSIT/BackPass.png\",\n            alt: \"Neural Network Backward Pass\",\n            caption: \"Depiction of the backward pass (backpropagation) algorithm, demonstrating how errors are propagated back through the network to update weights and biases.\"\n        },\n        {\n            src: \"/ProjectPics/MNSIT/TrainingAndTestRun.png\",\n            alt: \"Neural Network Training and Test Evaluation Code\",\n            caption: \"Code snippet demonstrating the initialization of the Neural Network, the training process with specified hyperparameters (epochs, batch size, dropout, regularization), and the final evaluation on the unseen test dataset to report loss and accuracy.\"\n        }\n    ],\n    3: [\n        // MNIST Neural Network\n        {\n            src: \"/ProjectPics/IntroAI/ModelComparison.png\",\n            alt: \"Model Comparison\",\n            caption: \"Visual representation comparing different AI/ML models, highlighting their architectures, strengths, and weaknesses.\"\n        }\n    ],\n    5: [\n        // EV Charging Station App\n        {\n            src: \"./Public/ProjectPics/EvChargingStation/ChargerAvailabilityCalendar.jpg\",\n            alt: \"Charger Availability Calendar View\",\n            caption: \"The charger availability screen displaying a calendar for date selection (e.g., January 8, 2025) and available time slots for booking chargers at a station.\"\n        },\n        {\n            src: \"./Public/ProjectPics/EvChargingStation/BookingReservationTimeSlots.jpg\",\n            alt: \"Booking Reservation with Time Slot Selection\",\n            caption: \"The booking reservation interface where users select a date, a specific charger (e.g., 'Charger charger2'), and view available time slots for their charging session.\"\n        },\n        {\n            src: \"./Public/ProjectPics/EvChargingStation/ForgotPasswordScreen.jpg\",\n            alt: \"Forgot Password Screen\",\n            caption: \"The 'Forgot Your Password?' screen, enabling users to reset their password by entering their registered email address to receive a reset link.\"\n        },\n        {\n            src: \"./ProjectPics/EvChargingStation/AnalyticsDashboard.jpg\",\n            alt: \"Analytics Dashboard with Peak Charging Times and Energy Consumption\",\n            caption: \"The Analytics Dashboard providing insights into usage patterns, including a bar chart for peak charging times and a line graph illustrating energy consumption trends.\"\n        },\n        {\n            src: \"/ProjectPics/EvChargingStation/ChargingPortDetails.jpg\",\n            alt: \"Charging Port Details Screen\",\n            caption: \"The Charging Port Details screen showing the physical location of a charging station (e.g., '29 Sparsholt Road, Barking, United Kingdom') and the number of total bookings for each individual charger.\"\n        },\n        {\n            src: \"/ProjectPics/EvChargingStation/MapChargerLocations.jpg\",\n            alt: \"Map View of Charger Locations\",\n            caption: \"A map interface displaying multiple charger locations (indicated by pins) in a geographical area (e.g., New York), allowing users to visually identify nearby charging stations.\"\n        },\n        {\n            src: \"/ProjectPics/EvChargingStation/CreateAccountForm.jpg\",\n            alt: \"Create Account Registration Form\",\n            caption: \"The 'Create Account' registration form, prompting users to enter their full name, email address, phone number, and desired password to register for the service.\"\n        },\n        {\n            src: \"/ProjectPics/EvChargingStation/HomePage.jpg\"\n        },\n        {\n            src: \"/ProjectPics/EvChargingStation/NavBar.jpg\"\n        },\n        {\n            src: \"/ProjectPics/EvChargingStation/Payments.jpg\"\n        }\n    ],\n    7: [\n        // 2D Platform Game with mixed media\n        {\n            src: \"/ProjectPics/2DPlatform/GamepicL1.png\",\n            alt: \"2D Platform Game Level 1\",\n            caption: \"First level of the 2D platform game, showcasing the initial environment and obstacles.\"\n        },\n        {\n            src: \"/ProjectPics/2DPlatform/GamepicL2.png\",\n            alt: \"2D Platform Game Level 2\",\n            caption: \"Second level of the 2D platform game, featuring new challenges and environments.\"\n        },\n        {\n            src: \"/ProjectPics/2DPlatform/GamepicL3.png\",\n            alt: \"2D Platform Game Level 3\",\n            caption: \"Third level of the 2D platform game, introducing advanced mechanics and obstacles.\"\n        },\n        {\n            src: \"/ProjectPics/2DPlatform/GameVideo.mp4\",\n            alt: \"2D Platform Game Video\",\n            caption: \"Video showcasing the gameplay mechanics, character movements, and level design of the 2D platform game.\"\n        }\n    ],\n    12: [\n        {\n            src: \"/ProjectPics/LancastersWebsite/VideoWalkthrough.mp4\",\n            alt: \"Lancaster's Restaurant Video Walkthrough\",\n            caption: \"Video walkthrough showcasing the features and functionality of Lancaster's Restaurant reservation system.\"\n        }\n    ],\n    14: [\n        {\n            src: \"/ProjectPics/SecurityAudit/JuiceShopVideo.mp4\",\n            alt: \"OWASP Juice Shop Security Evaluation Video\",\n            caption: \"Video walkthrough showcasing the findings of the 10 challenges from the OWASP Juice Shop security evaluation.\"\n        }\n    ],\n    6: [\n        // AirViva project images\n        // Admin Modules\n        {\n            src: \"/ProjectPics/AirViva/AdminRefundsInitial.jpg\",\n            alt: \"AirViva Admin - Refunds Initial Screen\",\n            caption: \"Initial screen for administrators to manage and process refunds within the AirViva system.\"\n        },\n        {\n            src: \"/ProjectPics/AirViva/AdminMainMenu.jpg\",\n            alt: \"AirViva Admin Home Page - Main Menu\",\n            caption: \"The main menu for AirViva administrators, providing navigation to various management functions.\"\n        },\n        {\n            src: \"/ProjectPics/AirViva/AdminBackUp.jpg\",\n            alt: \"AirViva Admin - Backup Utility\",\n            caption: \"Utility for administrators to perform system backups, ensuring data integrity for AirViva.\"\n        },\n        {\n            src: \"/ProjectPics/AirViva/AdminCommisonRates.jpg\",\n            alt: \"AirViva Admin - Commission Rates Configuration\",\n            caption: \"Interface for administrators to configure and adjust commission rates for sales in AirViva.\"\n        },\n        {\n            src: \"/ProjectPics/AirViva/AdminCreateUserAccount.jpg\",\n            alt: \"AirViva Admin - Create User Account\",\n            caption: \"Screen allowing administrators to create new user accounts within the AirViva system.\"\n        },\n        {\n            src: \"/ProjectPics/AirViva/AdminCustomerDetails.jpg\",\n            alt: \"AirViva Admin - Customer Details\",\n            caption: \"View and manage detailed information about AirViva customers.\"\n        },\n        {\n            src: \"/ProjectPics/AirViva/AdminLogIn.jpg\",\n            alt: \"AirViva Admin Login Page\",\n            caption: \"Secure login interface for AirViva administrators.\"\n        },\n        {\n            src: \"/ProjectPics/AirViva/AdminRestore.jpg\",\n            alt: \"AirViva Admin - Restore Utility\",\n            caption: \"Utility for administrators to restore AirViva system data from previous backups.\"\n        },\n        {\n            src: \"/ProjectPics/AirViva/AdminStock.jpg\",\n            alt: \"AirViva Admin - Stock Management\",\n            caption: \"Module for administrators to manage and monitor stock levels within AirViva.\"\n        },\n        {\n            src: \"/ProjectPics/AirViva/AdminUserDetails.jpg\",\n            alt: \"AirViva Admin - User Details Management\",\n            caption: \"Detailed management of user information and profiles in AirViva.\"\n        },\n        // Advisor Modules\n        {\n            src: \"/ProjectPics/AirViva/AdvisorEarnedCommission.jpg\",\n            alt: \"AirViva Advisor - Earned Commission\",\n            caption: \"Initial screen for AirViva advisors to view their earned commissions.\"\n        },\n        {\n            src: \"/ProjectPics/AirViva/AdvisorHomePage.jpg\",\n            alt: \"AirViva Advisor Home Page\",\n            caption: \"The home page for AirViva advisors, providing an overview of their tasks and information.\"\n        },\n        {\n            src: \"/ProjectPics/AirViva/AdvisorLogIn.jpg\",\n            alt: \"AirViva Advisor Login Page\",\n            caption: \"Login interface for AirViva advisors.\"\n        },\n        {\n            src: \"/ProjectPics/AirViva/AdvisorRefunds.jpg\",\n            alt: \"AirViva Advisor - Refund Processing\",\n            caption: \"Process and manage refunds through the AirViva advisor interface.\"\n        },\n        {\n            src: \"/ProjectPics/AirViva/AdvisorStock.jpg\",\n            alt: \"AirViva Advisor - Stock View\",\n            caption: \"Advisors' interface to view current stock or inventory status in AirViva.\"\n        },\n        {\n            src: \"/ProjectPics/AirViva/AdvisorTicketSales.jpg\",\n            alt: \"AirViva Advisor - Ticket Sales\",\n            caption: \"Module for AirViva advisors to manage and process ticket sales.\"\n        },\n        // Office Manager Modules\n        {\n            src: \"/ProjectPics/AirViva/OfficeManagerBlanks.jpg\",\n            alt: \"AirViva Office Manager - Blanks Initial\",\n            caption: \"Initial screen for Office Managers to manage ticket blanks or similar inventory.\"\n        },\n        {\n            src: \"/ProjectPics/AirViva/OfficeManagerDiscountPlan.jpg\",\n            alt: \"AirViva Office Manager - Discount Plan Configuration\",\n            caption: \"Interface for Office Managers to configure and manage discount plans for AirViva services.\"\n        },\n        {\n            src: \"/ProjectPics/AirViva/OfficeManagerDomesticSalesReport.jpg\",\n            alt: \"AirViva Office Manager - Domestic Sales Report\",\n            caption: \"Comprehensive report showing domestic sales performance for AirViva.\"\n        },\n        {\n            src: \"/ProjectPics/AirViva/OfficeManagerHomePage.jpg\",\n            alt: \"AirViva Office Manager Home Page\",\n            caption: \"The home page for AirViva Office Managers, providing an overview of key operations.\"\n        },\n        {\n            src: \"/ProjectPics/AirViva/OfficeManagerInterlineSalesReport.jpg\",\n            alt: \"AirViva Office Manager - Interline Sales Report\",\n            caption: \"Detailed report showing interline sales performance across the AirViva network.\"\n        },\n        {\n            src: \"/ProjectPics/AirViva/OfficeManagerLogIn.jpg\",\n            alt: \"AirViva Office Manager Login Page\",\n            caption: \"Login interface for AirViva Office Managers.\"\n        },\n        {\n            src: \"/ProjectPics/AirViva/OfficeManagerStock.jpg\",\n            alt: \"AirViva Office Manager - Stock Initial View\",\n            caption: \"Initial view for Office Managers to manage inventory and stock for AirViva.\"\n        },\n        {\n            src: \"/ProjectPics/AirViva/OfficeManagerTicketStockTurnoverReport.jpg\",\n            alt: \"AirViva Office Manager - Ticket Stock Turnover Report\",\n            caption: \"Report detailing the turnover rate of ticket stock for AirViva Office Managers.\"\n        }\n    ]\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/homepage/projects/constants.jsx\n"));

/***/ })

});